/*
 * generated by Xtext 2.10.0
 */
grammar InternalGraphqlidl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package oda.graphql.language.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package oda.graphql.language.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import oda.graphql.language.services.GraphqlidlGrammarAccess;

}
@parser::members {
	private GraphqlidlGrammarAccess grammarAccess;

	public void setGrammarAccess(GraphqlidlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGraphqlSchema
entryRuleGraphqlSchema
:
{ before(grammarAccess.getGraphqlSchemaRule()); }
	 ruleGraphqlSchema
{ after(grammarAccess.getGraphqlSchemaRule()); } 
	 EOF 
;

// Rule GraphqlSchema
ruleGraphqlSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup()); }
		(rule__GraphqlSchema__UnorderedGroup)
		{ after(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlSchemaDefinition
entryRuleGraphqlSchemaDefinition
:
{ before(grammarAccess.getGraphqlSchemaDefinitionRule()); }
	 ruleGraphqlSchemaDefinition
{ after(grammarAccess.getGraphqlSchemaDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlSchemaDefinition
ruleGraphqlSchemaDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getGroup()); }
		(rule__GraphqlSchemaDefinition__Group__0)
		{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlRootQuery
entryRuleGraphqlRootQuery
:
{ before(grammarAccess.getGraphqlRootQueryRule()); }
	 ruleGraphqlRootQuery
{ after(grammarAccess.getGraphqlRootQueryRule()); } 
	 EOF 
;

// Rule GraphqlRootQuery
ruleGraphqlRootQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlRootQueryAccess().getGroup()); }
		(rule__GraphqlRootQuery__Group__0)
		{ after(grammarAccess.getGraphqlRootQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlTypeDefinition
entryRuleGraphqlTypeDefinition
:
{ before(grammarAccess.getGraphqlTypeDefinitionRule()); }
	 ruleGraphqlTypeDefinition
{ after(grammarAccess.getGraphqlTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlTypeDefinition
ruleGraphqlTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getAlternatives()); }
		(rule__GraphqlTypeDefinition__Alternatives)
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlObjectTypeDefinition
entryRuleGraphqlObjectTypeDefinition
:
{ before(grammarAccess.getGraphqlObjectTypeDefinitionRule()); }
	 ruleGraphqlObjectTypeDefinition
{ after(grammarAccess.getGraphqlObjectTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlObjectTypeDefinition
ruleGraphqlObjectTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getGroup()); }
		(rule__GraphqlObjectTypeDefinition__Group__0)
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlInterfaceTypeDefinition
entryRuleGraphqlInterfaceTypeDefinition
:
{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionRule()); }
	 ruleGraphqlInterfaceTypeDefinition
{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlInterfaceTypeDefinition
ruleGraphqlInterfaceTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getGroup()); }
		(rule__GraphqlInterfaceTypeDefinition__Group__0)
		{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlScalarTypeDefinition
entryRuleGraphqlScalarTypeDefinition
:
{ before(grammarAccess.getGraphqlScalarTypeDefinitionRule()); }
	 ruleGraphqlScalarTypeDefinition
{ after(grammarAccess.getGraphqlScalarTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlScalarTypeDefinition
ruleGraphqlScalarTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getGroup()); }
		(rule__GraphqlScalarTypeDefinition__Group__0)
		{ after(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlEmunTypeDefinition
entryRuleGraphqlEmunTypeDefinition
:
{ before(grammarAccess.getGraphqlEmunTypeDefinitionRule()); }
	 ruleGraphqlEmunTypeDefinition
{ after(grammarAccess.getGraphqlEmunTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlEmunTypeDefinition
ruleGraphqlEmunTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getGroup()); }
		(rule__GraphqlEmunTypeDefinition__Group__0)
		{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlUnionTypeDefinition
entryRuleGraphqlUnionTypeDefinition
:
{ before(grammarAccess.getGraphqlUnionTypeDefinitionRule()); }
	 ruleGraphqlUnionTypeDefinition
{ after(grammarAccess.getGraphqlUnionTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlUnionTypeDefinition
ruleGraphqlUnionTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getGroup()); }
		(rule__GraphqlUnionTypeDefinition__Group__0)
		{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlInputTypeDefinition
entryRuleGraphqlInputTypeDefinition
:
{ before(grammarAccess.getGraphqlInputTypeDefinitionRule()); }
	 ruleGraphqlInputTypeDefinition
{ after(grammarAccess.getGraphqlInputTypeDefinitionRule()); } 
	 EOF 
;

// Rule GraphqlInputTypeDefinition
ruleGraphqlInputTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getGroup()); }
		(rule__GraphqlInputTypeDefinition__Group__0)
		{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlInputField
entryRuleGraphqlInputField
:
{ before(grammarAccess.getGraphqlInputFieldRule()); }
	 ruleGraphqlInputField
{ after(grammarAccess.getGraphqlInputFieldRule()); } 
	 EOF 
;

// Rule GraphqlInputField
ruleGraphqlInputField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlInputFieldAccess().getGroup()); }
		(rule__GraphqlInputField__Group__0)
		{ after(grammarAccess.getGraphqlInputFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlField
entryRuleGraphqlField
:
{ before(grammarAccess.getGraphqlFieldRule()); }
	 ruleGraphqlField
{ after(grammarAccess.getGraphqlFieldRule()); } 
	 EOF 
;

// Rule GraphqlField
ruleGraphqlField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlFieldAccess().getGroup()); }
		(rule__GraphqlField__Group__0)
		{ after(grammarAccess.getGraphqlFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlType
entryRuleGraphqlType
:
{ before(grammarAccess.getGraphqlTypeRule()); }
	 ruleGraphqlType
{ after(grammarAccess.getGraphqlTypeRule()); } 
	 EOF 
;

// Rule GraphqlType
ruleGraphqlType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getAlternatives()); }
		(rule__GraphqlType__Alternatives)
		{ after(grammarAccess.getGraphqlTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlNamedType
entryRuleGraphqlNamedType
:
{ before(grammarAccess.getGraphqlNamedTypeRule()); }
	 ruleGraphqlNamedType
{ after(grammarAccess.getGraphqlNamedTypeRule()); } 
	 EOF 
;

// Rule GraphqlNamedType
ruleGraphqlNamedType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlNamedTypeAccess().getNameAssignment()); }
		(rule__GraphqlNamedType__NameAssignment)
		{ after(grammarAccess.getGraphqlNamedTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlListType
entryRuleGraphqlListType
:
{ before(grammarAccess.getGraphqlListTypeRule()); }
	 ruleGraphqlListType
{ after(grammarAccess.getGraphqlListTypeRule()); } 
	 EOF 
;

// Rule GraphqlListType
ruleGraphqlListType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlListTypeAccess().getGroup()); }
		(rule__GraphqlListType__Group__0)
		{ after(grammarAccess.getGraphqlListTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlInputType
entryRuleGraphqlInputType
:
{ before(grammarAccess.getGraphqlInputTypeRule()); }
	 ruleGraphqlInputType
{ after(grammarAccess.getGraphqlInputTypeRule()); } 
	 EOF 
;

// Rule GraphqlInputType
ruleGraphqlInputType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getAlternatives()); }
		(rule__GraphqlInputType__Alternatives)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlListInputType
entryRuleGraphqlListInputType
:
{ before(grammarAccess.getGraphqlListInputTypeRule()); }
	 ruleGraphqlListInputType
{ after(grammarAccess.getGraphqlListInputTypeRule()); } 
	 EOF 
;

// Rule GraphqlListInputType
ruleGraphqlListInputType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlListInputTypeAccess().getGroup()); }
		(rule__GraphqlListInputType__Group__0)
		{ after(grammarAccess.getGraphqlListInputTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphqlValue
entryRuleGraphqlValue
:
{ before(grammarAccess.getGraphqlValueRule()); }
	 ruleGraphqlValue
{ after(grammarAccess.getGraphqlValueRule()); } 
	 EOF 
;

// Rule GraphqlValue
ruleGraphqlValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphqlValueAccess().getAlternatives()); }
		(rule__GraphqlValue__Alternatives)
		{ after(grammarAccess.getGraphqlValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleValue
entryRuleSingleValue
:
{ before(grammarAccess.getSingleValueRule()); }
	 ruleSingleValue
{ after(grammarAccess.getSingleValueRule()); } 
	 EOF 
;

// Rule SingleValue
ruleSingleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleValueAccess().getAlternatives()); }
		(rule__SingleValue__Alternatives)
		{ after(grammarAccess.getSingleValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexValue
entryRuleComplexValue
:
{ before(grammarAccess.getComplexValueRule()); }
	 ruleComplexValue
{ after(grammarAccess.getComplexValueRule()); } 
	 EOF 
;

// Rule ComplexValue
ruleComplexValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexValueAccess().getAlternatives()); }
		(rule__ComplexValue__Alternatives)
		{ after(grammarAccess.getComplexValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValue
entryRuleEnumValue
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueAccess().getGroup()); }
		(rule__EnumValue__Group__0)
		{ after(grammarAccess.getEnumValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListValue
entryRuleListValue
:
{ before(grammarAccess.getListValueRule()); }
	 ruleListValue
{ after(grammarAccess.getListValueRule()); } 
	 EOF 
;

// Rule ListValue
ruleListValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListValueAccess().getGroup()); }
		(rule__ListValue__Group__0)
		{ after(grammarAccess.getListValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectValue
entryRuleObjectValue
:
{ before(grammarAccess.getObjectValueRule()); }
	 ruleObjectValue
{ after(grammarAccess.getObjectValueRule()); } 
	 EOF 
;

// Rule ObjectValue
ruleObjectValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectValueAccess().getGroup()); }
		(rule__ObjectValue__Group__0)
		{ after(grammarAccess.getObjectValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectField
entryRuleObjectField
:
{ before(grammarAccess.getObjectFieldRule()); }
	 ruleObjectField
{ after(grammarAccess.getObjectFieldRule()); } 
	 EOF 
;

// Rule ObjectField
ruleObjectField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectFieldAccess().getGroup()); }
		(rule__ObjectField__Group__0)
		{ after(grammarAccess.getObjectFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getIntegerPartParserRuleCall()); }
		ruleIntegerPart
		{ after(grammarAccess.getIntValueAccess().getIntegerPartParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerPart
entryRuleIntegerPart
:
{ before(grammarAccess.getIntegerPartRule()); }
	 ruleIntegerPart
{ after(grammarAccess.getIntegerPartRule()); } 
	 EOF 
;

// Rule IntegerPart
ruleIntegerPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerPartAccess().getAlternatives()); }
		(rule__IntegerPart__Alternatives)
		{ after(grammarAccess.getIntegerPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegativeSign
entryRuleNegativeSign
:
{ before(grammarAccess.getNegativeSignRule()); }
	 ruleNegativeSign
{ after(grammarAccess.getNegativeSignRule()); } 
	 EOF 
;

// Rule NegativeSign
ruleNegativeSign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegativeSignAccess().getHyphenMinusKeyword()); }
		'-'
		{ after(grammarAccess.getNegativeSignAccess().getHyphenMinusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatValue
entryRuleFloatValue
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatValueAccess().getAlternatives()); }
		(rule__FloatValue__Alternatives)
		{ after(grammarAccess.getFloatValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFractionalPart
entryRuleFractionalPart
:
{ before(grammarAccess.getFractionalPartRule()); }
	 ruleFractionalPart
{ after(grammarAccess.getFractionalPartRule()); } 
	 EOF 
;

// Rule FractionalPart
ruleFractionalPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFractionalPartAccess().getGroup()); }
		(rule__FractionalPart__Group__0)
		{ after(grammarAccess.getFractionalPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentPart
entryRuleExponentPart
:
{ before(grammarAccess.getExponentPartRule()); }
	 ruleExponentPart
{ after(grammarAccess.getExponentPartRule()); } 
	 EOF 
;

// Rule ExponentPart
ruleExponentPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentPartAccess().getGroup()); }
		(rule__ExponentPart__Group__0)
		{ after(grammarAccess.getExponentPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponentIndicator
entryRuleExponentIndicator
:
{ before(grammarAccess.getExponentIndicatorRule()); }
	 ruleExponentIndicator
{ after(grammarAccess.getExponentIndicatorRule()); } 
	 EOF 
;

// Rule ExponentIndicator
ruleExponentIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentIndicatorAccess().getAlternatives()); }
		(rule__ExponentIndicator__Alternatives)
		{ after(grammarAccess.getExponentIndicatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSign
entryRuleSign
:
{ before(grammarAccess.getSignRule()); }
	 ruleSign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule Sign
ruleSign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignAccess().getAlternatives()); }
		(rule__Sign__Alternatives)
		{ after(grammarAccess.getSignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getAlternatives()); }
		(rule__StringValue__Alternatives)
		{ after(grammarAccess.getStringValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlTypeDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlObjectTypeDefinitionParserRuleCall_0()); }
		ruleGraphqlObjectTypeDefinition
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlObjectTypeDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlScalarTypeDefinitionParserRuleCall_1()); }
		ruleGraphqlScalarTypeDefinition
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlScalarTypeDefinitionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlInterfaceTypeDefinitionParserRuleCall_2()); }
		ruleGraphqlInterfaceTypeDefinition
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlInterfaceTypeDefinitionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlUnionTypeDefinitionParserRuleCall_3()); }
		ruleGraphqlUnionTypeDefinition
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlUnionTypeDefinitionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlEmunTypeDefinitionParserRuleCall_4()); }
		ruleGraphqlEmunTypeDefinition
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlEmunTypeDefinitionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlInputTypeDefinitionParserRuleCall_5()); }
		ruleGraphqlInputTypeDefinition
		{ after(grammarAccess.getGraphqlTypeDefinitionAccess().getGraphqlInputTypeDefinitionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getGroup_0()); }
		(rule__GraphqlType__Group_0__0)
		{ after(grammarAccess.getGraphqlTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getGroup_1()); }
		(rule__GraphqlType__Group_1__0)
		{ after(grammarAccess.getGraphqlTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getGroup_2()); }
		(rule__GraphqlType__Group_2__0)
		{ after(grammarAccess.getGraphqlTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getGroup_0()); }
		(rule__GraphqlInputType__Group_0__0)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getGroup_1()); }
		(rule__GraphqlInputType__Group_1__0)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getGroup_2()); }
		(rule__GraphqlInputType__Group_2__0)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlValueAccess().getSvAssignment_0()); }
		(rule__GraphqlValue__SvAssignment_0)
		{ after(grammarAccess.getGraphqlValueAccess().getSvAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlValueAccess().getEvAssignment_1()); }
		(rule__GraphqlValue__EvAssignment_1)
		{ after(grammarAccess.getGraphqlValueAccess().getEvAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getGraphqlValueAccess().getCvAssignment_2()); }
		(rule__GraphqlValue__CvAssignment_2)
		{ after(grammarAccess.getGraphqlValueAccess().getCvAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_0()); }
		(rule__SingleValue__ValueAssignment_0)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_1()); }
		(rule__SingleValue__ValueAssignment_1)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_2()); }
		(rule__SingleValue__ValueAssignment_2)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_3()); }
		(rule__SingleValue__ValueAssignment_3)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_4()); }
		(rule__SingleValue__ValueAssignment_4)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexValueAccess().getValueAssignment_0()); }
		(rule__ComplexValue__ValueAssignment_0)
		{ after(grammarAccess.getComplexValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexValueAccess().getValueAssignment_1()); }
		(rule__ComplexValue__ValueAssignment_1)
		{ after(grammarAccess.getComplexValueAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerPartAccess().getGroup_0()); }
		(rule__IntegerPart__Group_0__0)
		{ after(grammarAccess.getIntegerPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerPartAccess().getGroup_1()); }
		(rule__IntegerPart__Group_1__0)
		{ after(grammarAccess.getIntegerPartAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatValueAccess().getGroup_0()); }
		(rule__FloatValue__Group_0__0)
		{ after(grammarAccess.getFloatValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatValueAccess().getGroup_1()); }
		(rule__FloatValue__Group_1__0)
		{ after(grammarAccess.getFloatValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFloatValueAccess().getGroup_2()); }
		(rule__FloatValue__Group_2__0)
		{ after(grammarAccess.getFloatValueAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentIndicator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentIndicatorAccess().getEKeyword_0()); }
		'e'
		{ after(grammarAccess.getExponentIndicatorAccess().getEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentIndicatorAccess().getEKeyword_1()); }
		'E'
		{ after(grammarAccess.getExponentIndicatorAccess().getEKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getGroup_0()); }
		(rule__StringValue__Group_0__0)
		{ after(grammarAccess.getStringValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringValueAccess().getGroup_1()); }
		(rule__StringValue__Group_1__0)
		{ after(grammarAccess.getStringValueAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group__0__Impl
	rule__GraphqlSchemaDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getNameAssignment_0()); }
	(rule__GraphqlSchemaDefinition__NameAssignment_0)
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group__1__Impl
	rule__GraphqlSchemaDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group__2__Impl
	rule__GraphqlSchemaDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getRootQueryAssignment_2()); }
	(rule__GraphqlSchemaDefinition__RootQueryAssignment_2)
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getRootQueryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group__3__Impl
	rule__GraphqlSchemaDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getGroup_3()); }
	(rule__GraphqlSchemaDefinition__Group_3__0)?
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group__4__Impl
	rule__GraphqlSchemaDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getGroup_4()); }
	(rule__GraphqlSchemaDefinition__Group_4__0)?
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlSchemaDefinition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group_3__0__Impl
	rule__GraphqlSchemaDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationKeyword_3_0()); }
	'mutation'
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group_3__1__Impl
	rule__GraphqlSchemaDefinition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationAssignment_3_2()); }
	(rule__GraphqlSchemaDefinition__MutationAssignment_3_2)
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlSchemaDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group_4__0__Impl
	rule__GraphqlSchemaDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubscriptionKeyword_4_0()); }
	'subscription'
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubscriptionKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group_4__1__Impl
	rule__GraphqlSchemaDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchemaDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubcriptionAssignment_4_2()); }
	(rule__GraphqlSchemaDefinition__SubcriptionAssignment_4_2)
	{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubcriptionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlRootQuery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlRootQuery__Group__0__Impl
	rule__GraphqlRootQuery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlRootQueryAccess().getNameAssignment_0()); }
	(rule__GraphqlRootQuery__NameAssignment_0)
	{ after(grammarAccess.getGraphqlRootQueryAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlRootQuery__Group__1__Impl
	rule__GraphqlRootQuery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlRootQueryAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getGraphqlRootQueryAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlRootQuery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlRootQueryAccess().getQueryAssignment_2()); }
	(rule__GraphqlRootQuery__QueryAssignment_2)
	{ after(grammarAccess.getGraphqlRootQueryAccess().getQueryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlObjectTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group__0__Impl
	rule__GraphqlObjectTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group__1__Impl
	rule__GraphqlObjectTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__GraphqlObjectTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group__2__Impl
	rule__GraphqlObjectTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getGroup_2()); }
	(rule__GraphqlObjectTypeDefinition__Group_2__0)?
	{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group__3__Impl
	rule__GraphqlObjectTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group__4__Impl
	rule__GraphqlObjectTypeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getFieldsAssignment_4()); }
		(rule__GraphqlObjectTypeDefinition__FieldsAssignment_4)
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getFieldsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getFieldsAssignment_4()); }
		(rule__GraphqlObjectTypeDefinition__FieldsAssignment_4)*
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getFieldsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlObjectTypeDefinition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group_2__0__Impl
	rule__GraphqlObjectTypeDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getImplementsKeyword_2_0()); }
	'implements'
	{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getImplementsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlObjectTypeDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesAssignment_2_1()); }
		(rule__GraphqlObjectTypeDefinition__InterfacesAssignment_2_1)
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesAssignment_2_1()); }
	)
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesAssignment_2_1()); }
		(rule__GraphqlObjectTypeDefinition__InterfacesAssignment_2_1)*
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesAssignment_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlInterfaceTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInterfaceTypeDefinition__Group__0__Impl
	rule__GraphqlInterfaceTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInterfaceTypeDefinition__Group__1__Impl
	rule__GraphqlInterfaceTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__GraphqlInterfaceTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInterfaceTypeDefinition__Group__2__Impl
	rule__GraphqlInterfaceTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInterfaceTypeDefinition__Group__3__Impl
	rule__GraphqlInterfaceTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getFieldsAssignment_3()); }
		(rule__GraphqlInterfaceTypeDefinition__FieldsAssignment_3)
		{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getFieldsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getFieldsAssignment_3()); }
		(rule__GraphqlInterfaceTypeDefinition__FieldsAssignment_3)*
		{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getFieldsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInterfaceTypeDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlScalarTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlScalarTypeDefinition__Group__0__Impl
	rule__GraphqlScalarTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlScalarTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getScalarKeyword_0()); }
	'scalar'
	{ after(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getScalarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlScalarTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlScalarTypeDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlScalarTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__GraphqlScalarTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlEmunTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlEmunTypeDefinition__Group__0__Impl
	rule__GraphqlEmunTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlEmunTypeDefinition__Group__1__Impl
	rule__GraphqlEmunTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__GraphqlEmunTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlEmunTypeDefinition__Group__2__Impl
	rule__GraphqlEmunTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlEmunTypeDefinition__Group__3__Impl
	rule__GraphqlEmunTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getValuesAssignment_3()); }
		(rule__GraphqlEmunTypeDefinition__ValuesAssignment_3)
		{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getValuesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getValuesAssignment_3()); }
		(rule__GraphqlEmunTypeDefinition__ValuesAssignment_3)*
		{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getValuesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlEmunTypeDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlUnionTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group__0__Impl
	rule__GraphqlUnionTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getUnionKeyword_0()); }
	'union'
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getUnionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group__1__Impl
	rule__GraphqlUnionTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__GraphqlUnionTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group__2__Impl
	rule__GraphqlUnionTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group__3__Impl
	rule__GraphqlUnionTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersAssignment_3()); }
	(rule__GraphqlUnionTypeDefinition__MembersAssignment_3)
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getGroup_4()); }
	(rule__GraphqlUnionTypeDefinition__Group_4__0)*
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlUnionTypeDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group_4__0__Impl
	rule__GraphqlUnionTypeDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getVerticalLineKeyword_4_0()); }
	'|'
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getVerticalLineKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlUnionTypeDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersAssignment_4_1()); }
	(rule__GraphqlUnionTypeDefinition__MembersAssignment_4_1)
	{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlInputTypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputTypeDefinition__Group__0__Impl
	rule__GraphqlInputTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputTypeDefinition__Group__1__Impl
	rule__GraphqlInputTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__GraphqlInputTypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputTypeDefinition__Group__2__Impl
	rule__GraphqlInputTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputTypeDefinition__Group__3__Impl
	rule__GraphqlInputTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getFieldsAssignment_3()); }
		(rule__GraphqlInputTypeDefinition__FieldsAssignment_3)
		{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getFieldsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getFieldsAssignment_3()); }
		(rule__GraphqlInputTypeDefinition__FieldsAssignment_3)*
		{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getFieldsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputTypeDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlInputField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputField__Group__0__Impl
	rule__GraphqlInputField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputFieldAccess().getNameAssignment_0()); }
	(rule__GraphqlInputField__NameAssignment_0)
	{ after(grammarAccess.getGraphqlInputFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputField__Group__1__Impl
	rule__GraphqlInputField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getGraphqlInputFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputFieldAccess().getTypeAssignment_2()); }
	(rule__GraphqlInputField__TypeAssignment_2)
	{ after(grammarAccess.getGraphqlInputFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group__0__Impl
	rule__GraphqlField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getNameAssignment_0()); }
	(rule__GraphqlField__NameAssignment_0)
	{ after(grammarAccess.getGraphqlFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group__1__Impl
	rule__GraphqlField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getGroup_1()); }
	(rule__GraphqlField__Group_1__0)*
	{ after(grammarAccess.getGraphqlFieldAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group__2__Impl
	rule__GraphqlField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getGraphqlFieldAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getTypeAssignment_3()); }
	(rule__GraphqlField__TypeAssignment_3)
	{ after(grammarAccess.getGraphqlFieldAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlField__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group_1__0__Impl
	rule__GraphqlField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getGraphqlFieldAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group_1__1__Impl
	rule__GraphqlField__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getArgsAssignment_1_1()); }
	(rule__GraphqlField__ArgsAssignment_1_1)
	{ after(grammarAccess.getGraphqlFieldAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlField__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlFieldAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getGraphqlFieldAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlType__Group_0__0__Impl
	rule__GraphqlType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlTypeAccess().getDtypeAssignment_0_0()); }
	(rule__GraphqlType__DtypeAssignment_0_0)
	{ after(grammarAccess.getGraphqlTypeAccess().getDtypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlTypeAccess().getNonNullAssignment_0_1()); }
	(rule__GraphqlType__NonNullAssignment_0_1)?
	{ after(grammarAccess.getGraphqlTypeAccess().getNonNullAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlType__Group_1__0__Impl
	rule__GraphqlType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlTypeAccess().getNtypeAssignment_1_0()); }
	(rule__GraphqlType__NtypeAssignment_1_0)
	{ after(grammarAccess.getGraphqlTypeAccess().getNtypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlTypeAccess().getNonNullAssignment_1_1()); }
	(rule__GraphqlType__NonNullAssignment_1_1)?
	{ after(grammarAccess.getGraphqlTypeAccess().getNonNullAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlType__Group_2__0__Impl
	rule__GraphqlType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlTypeAccess().getLtypeAssignment_2_0()); }
	(rule__GraphqlType__LtypeAssignment_2_0)
	{ after(grammarAccess.getGraphqlTypeAccess().getLtypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlTypeAccess().getNonNullAssignment_2_1()); }
	(rule__GraphqlType__NonNullAssignment_2_1)?
	{ after(grammarAccess.getGraphqlTypeAccess().getNonNullAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlListType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlListType__Group__0__Impl
	rule__GraphqlListType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlListTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getGraphqlListTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlListType__Group__1__Impl
	rule__GraphqlListType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlListTypeAccess().getGraphqlTypeParserRuleCall_1()); }
	ruleGraphqlType
	{ after(grammarAccess.getGraphqlListTypeAccess().getGraphqlTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlListType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlListTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getGraphqlListTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlInputType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputType__Group_0__0__Impl
	rule__GraphqlInputType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeAccess().getDtypeAssignment_0_0()); }
	(rule__GraphqlInputType__DtypeAssignment_0_0)
	{ after(grammarAccess.getGraphqlInputTypeAccess().getDtypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullAssignment_0_1()); }
	(rule__GraphqlInputType__NonNullAssignment_0_1)?
	{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlInputType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputType__Group_1__0__Impl
	rule__GraphqlInputType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeAccess().getNtypeAssignment_1_0()); }
	(rule__GraphqlInputType__NtypeAssignment_1_0)
	{ after(grammarAccess.getGraphqlInputTypeAccess().getNtypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullAssignment_1_1()); }
	(rule__GraphqlInputType__NonNullAssignment_1_1)?
	{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlInputType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputType__Group_2__0__Impl
	rule__GraphqlInputType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeAccess().getLtypeAssignment_2_0()); }
	(rule__GraphqlInputType__LtypeAssignment_2_0)
	{ after(grammarAccess.getGraphqlInputTypeAccess().getLtypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlInputType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullAssignment_2_1()); }
	(rule__GraphqlInputType__NonNullAssignment_2_1)?
	{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlListInputType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlListInputType__Group__0__Impl
	rule__GraphqlListInputType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListInputType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlListInputTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getGraphqlListInputTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListInputType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlListInputType__Group__1__Impl
	rule__GraphqlListInputType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListInputType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlListInputTypeAccess().getGraphqlInputTypeParserRuleCall_1()); }
	ruleGraphqlInputType
	{ after(grammarAccess.getGraphqlListInputTypeAccess().getGraphqlInputTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListInputType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlListInputType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlListInputType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphqlListInputTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getGraphqlListInputTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_0()); }
	(rule__Argument__NameAssignment_0)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
	rule__Argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getArgumentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__2__Impl
	rule__Argument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getTypeAssignment_2()); }
	(rule__Argument__TypeAssignment_2)
	{ after(grammarAccess.getArgumentAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getGroup_3()); }
	(rule__Argument__Group_3__0)?
	{ after(grammarAccess.getArgumentAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_3__0__Impl
	rule__Argument__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getArgumentAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getDefValueAssignment_3_1()); }
	(rule__Argument__DefValueAssignment_3_1)
	{ after(grammarAccess.getArgumentAccess().getDefValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group__0__Impl
	rule__EnumValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getEnumValueAction_0()); }
	()
	{ after(grammarAccess.getEnumValueAccess().getEnumValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueAccess().getNameAssignment_1()); }
	(rule__EnumValue__NameAssignment_1)
	{ after(grammarAccess.getEnumValueAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__0__Impl
	rule__ListValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getListValueAction_0()); }
	()
	{ after(grammarAccess.getListValueAccess().getListValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__1__Impl
	rule__ListValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getListValueAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__2__Impl
	rule__ListValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getValuesAssignment_2()); }
	(rule__ListValue__ValuesAssignment_2)*
	{ after(grammarAccess.getListValueAccess().getValuesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getListValueAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__0__Impl
	rule__ObjectValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
	()
	{ after(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__1__Impl
	rule__ObjectValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__2__Impl
	rule__ObjectValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getFieldsAssignment_2()); }
	(rule__ObjectValue__FieldsAssignment_2)*
	{ after(grammarAccess.getObjectValueAccess().getFieldsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectField__Group__0__Impl
	rule__ObjectField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFieldAccess().getNameAssignment_0()); }
	(rule__ObjectField__NameAssignment_0)
	{ after(grammarAccess.getObjectFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectField__Group__1__Impl
	rule__ObjectField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getObjectFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFieldAccess().getValueAssignment_2()); }
	(rule__ObjectField__ValueAssignment_2)
	{ after(grammarAccess.getObjectFieldAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPart__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerPart__Group_0__0__Impl
	rule__IntegerPart__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerPartAccess().getNegativeSignParserRuleCall_0_0()); }
	(ruleNegativeSign)?
	{ after(grammarAccess.getIntegerPartAccess().getNegativeSignParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerPart__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerPartAccess().getDigitZeroKeyword_0_1()); }
	'0'
	{ after(grammarAccess.getIntegerPartAccess().getDigitZeroKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerPart__Group_1__0__Impl
	rule__IntegerPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerPartAccess().getNegativeSignParserRuleCall_1_0()); }
	(ruleNegativeSign)?
	{ after(grammarAccess.getIntegerPartAccess().getNegativeSignParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerPart__Group_1__1__Impl
	rule__IntegerPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerPartAccess().getNONZERODIGITTerminalRuleCall_1_1()); }
	RULE_NONZERODIGIT
	{ after(grammarAccess.getIntegerPartAccess().getNONZERODIGITTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerPart__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPart__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerPartAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
	{ after(grammarAccess.getIntegerPartAccess().getINTTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_0__0__Impl
	rule__FloatValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_0_0()); }
	ruleIntegerPart
	{ after(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getFractionalPartParserRuleCall_0_1()); }
	ruleFractionalPart
	{ after(grammarAccess.getFloatValueAccess().getFractionalPartParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_1__0__Impl
	rule__FloatValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_1_0()); }
	ruleIntegerPart
	{ after(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getExponentPartParserRuleCall_1_1()); }
	ruleExponentPart
	{ after(grammarAccess.getFloatValueAccess().getExponentPartParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_2__0__Impl
	rule__FloatValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_2_0()); }
	ruleIntegerPart
	{ after(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_2__1__Impl
	rule__FloatValue__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getFractionalPartParserRuleCall_2_1()); }
	ruleFractionalPart
	{ after(grammarAccess.getFloatValueAccess().getFractionalPartParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatValue__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatValueAccess().getExponentPartParserRuleCall_2_2()); }
	ruleExponentPart
	{ after(grammarAccess.getFloatValueAccess().getExponentPartParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FractionalPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FractionalPart__Group__0__Impl
	rule__FractionalPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionalPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFractionalPartAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getFractionalPartAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionalPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FractionalPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FractionalPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFractionalPartAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getFractionalPartAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExponentPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentPart__Group__0__Impl
	rule__ExponentPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentPartAccess().getExponentIndicatorParserRuleCall_0()); }
	ruleExponentIndicator
	{ after(grammarAccess.getExponentPartAccess().getExponentIndicatorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentPart__Group__1__Impl
	rule__ExponentPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentPartAccess().getSignParserRuleCall_1()); }
	(ruleSign)?
	{ after(grammarAccess.getExponentPartAccess().getSignParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExponentPart__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExponentPart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getExponentPartAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group_0__0__Impl
	rule__StringValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_0_0()); }
	'"'
	{ after(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_0_1()); }
	'"'
	{ after(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group_1__0__Impl
	rule__StringValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_1_0()); }
	'"'
	{ after(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group_1__1__Impl
	rule__StringValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
	{ after(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_1_2()); }
	'"'
	{ after(grammarAccess.getStringValueAccess().getQuotationMarkKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlSchema__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup());
	}
:
	rule__GraphqlSchema__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__GraphqlSchema__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getGraphqlSchemaAccess().getSchemaAssignment_0()); }
					(rule__GraphqlSchema__SchemaAssignment_0)
					{ after(grammarAccess.getGraphqlSchemaAccess().getSchemaAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getGraphqlSchemaAccess().getTypesAssignment_1()); }
						(rule__GraphqlSchema__TypesAssignment_1)
						{ after(grammarAccess.getGraphqlSchemaAccess().getTypesAssignment_1()); }
					)
					(
						{ before(grammarAccess.getGraphqlSchemaAccess().getTypesAssignment_1()); }
						((rule__GraphqlSchema__TypesAssignment_1)=>rule__GraphqlSchema__TypesAssignment_1)*
						{ after(grammarAccess.getGraphqlSchemaAccess().getTypesAssignment_1()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGraphqlSchemaAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__GraphqlSchema__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchema__UnorderedGroup__Impl
	rule__GraphqlSchema__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchema__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphqlSchema__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphqlSchema__SchemaAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlSchemaAccess().getSchemaGraphqlSchemaDefinitionParserRuleCall_0_0()); }
		ruleGraphqlSchemaDefinition
		{ after(grammarAccess.getGraphqlSchemaAccess().getSchemaGraphqlSchemaDefinitionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchema__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlSchemaAccess().getTypesGraphqlTypeDefinitionParserRuleCall_1_0()); }
		ruleGraphqlTypeDefinition
		{ after(grammarAccess.getGraphqlSchemaAccess().getTypesGraphqlTypeDefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getNameSchemaKeyword_0_0()); }
		(
			{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getNameSchemaKeyword_0_0()); }
			'schema'
			{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getNameSchemaKeyword_0_0()); }
		)
		{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getNameSchemaKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__RootQueryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getRootQueryGraphqlRootQueryParserRuleCall_2_0()); }
		ruleGraphqlRootQuery
		{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getRootQueryGraphqlRootQueryParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__MutationAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationGraphqlObjectTypeDefinitionCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationGraphqlObjectTypeDefinitionNAMETerminalRuleCall_3_2_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationGraphqlObjectTypeDefinitionNAMETerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getMutationGraphqlObjectTypeDefinitionCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlSchemaDefinition__SubcriptionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubcriptionGraphqlObjectTypeDefinitionCrossReference_4_2_0()); }
		(
			{ before(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubcriptionGraphqlObjectTypeDefinitionNAMETerminalRuleCall_4_2_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubcriptionGraphqlObjectTypeDefinitionNAMETerminalRuleCall_4_2_0_1()); }
		)
		{ after(grammarAccess.getGraphqlSchemaDefinitionAccess().getSubcriptionGraphqlObjectTypeDefinitionCrossReference_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlRootQueryAccess().getNameQueryKeyword_0_0()); }
		(
			{ before(grammarAccess.getGraphqlRootQueryAccess().getNameQueryKeyword_0_0()); }
			'query'
			{ after(grammarAccess.getGraphqlRootQueryAccess().getNameQueryKeyword_0_0()); }
		)
		{ after(grammarAccess.getGraphqlRootQueryAccess().getNameQueryKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlRootQuery__QueryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlRootQueryAccess().getQueryGraphqlObjectTypeDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGraphqlRootQueryAccess().getQueryGraphqlObjectTypeDefinitionNAMETerminalRuleCall_2_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlRootQueryAccess().getQueryGraphqlObjectTypeDefinitionNAMETerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGraphqlRootQueryAccess().getQueryGraphqlObjectTypeDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__InterfacesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesGraphqlInterfaceTypeDefinitionCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesGraphqlInterfaceTypeDefinitionNAMETerminalRuleCall_2_1_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesGraphqlInterfaceTypeDefinitionNAMETerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getInterfacesGraphqlInterfaceTypeDefinitionCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlObjectTypeDefinition__FieldsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getFieldsGraphqlFieldParserRuleCall_4_0()); }
		ruleGraphqlField
		{ after(grammarAccess.getGraphqlObjectTypeDefinitionAccess().getFieldsGraphqlFieldParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInterfaceTypeDefinition__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getFieldsGraphqlFieldParserRuleCall_3_0()); }
		ruleGraphqlField
		{ after(grammarAccess.getGraphqlInterfaceTypeDefinitionAccess().getFieldsGraphqlFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlScalarTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlScalarTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlEmunTypeDefinition__ValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getValuesEnumValueParserRuleCall_3_0()); }
		ruleEnumValue
		{ after(grammarAccess.getGraphqlEmunTypeDefinitionAccess().getValuesEnumValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__MembersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionNAMETerminalRuleCall_3_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionNAMETerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlUnionTypeDefinition__MembersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionNAMETerminalRuleCall_4_1_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionNAMETerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getGraphqlUnionTypeDefinitionAccess().getMembersGraphqlObjectTypeDefinitionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputTypeDefinition__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeDefinitionAccess().getFieldsGraphqlInputFieldParserRuleCall_3_0()); }
		ruleGraphqlInputField
		{ after(grammarAccess.getGraphqlInputTypeDefinitionAccess().getFieldsGraphqlInputFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlInputFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputField__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputFieldAccess().getTypeGraphqlInputTypeParserRuleCall_2_0()); }
		ruleGraphqlInputType
		{ after(grammarAccess.getGraphqlInputFieldAccess().getTypeGraphqlInputTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getGraphqlFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlFieldAccess().getArgsArgumentParserRuleCall_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getGraphqlFieldAccess().getArgsArgumentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlField__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlFieldAccess().getTypeGraphqlTypeParserRuleCall_3_0()); }
		ruleGraphqlType
		{ after(grammarAccess.getGraphqlFieldAccess().getTypeGraphqlTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__DtypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getDtypeGraphqlTypeDefinitionCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getGraphqlTypeAccess().getDtypeGraphqlTypeDefinitionNAMETerminalRuleCall_0_0_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlTypeAccess().getDtypeGraphqlTypeDefinitionNAMETerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getGraphqlTypeAccess().getDtypeGraphqlTypeDefinitionCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__NonNullAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
			'!'
			{ after(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__NtypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getNtypeGraphqlNamedTypeParserRuleCall_1_0_0()); }
		ruleGraphqlNamedType
		{ after(grammarAccess.getGraphqlTypeAccess().getNtypeGraphqlNamedTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__NonNullAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
			'!'
			{ after(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__LtypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getLtypeGraphqlListTypeParserRuleCall_2_0_0()); }
		ruleGraphqlListType
		{ after(grammarAccess.getGraphqlTypeAccess().getLtypeGraphqlListTypeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlType__NonNullAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
			'!'
			{ after(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getGraphqlTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlNamedType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlNamedTypeAccess().getNameSCALARTerminalRuleCall_0()); }
		RULE_SCALAR
		{ after(grammarAccess.getGraphqlNamedTypeAccess().getNameSCALARTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__DtypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getDtypeGraphqlInputTypeDefinitionCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getGraphqlInputTypeAccess().getDtypeGraphqlInputTypeDefinitionNAMETerminalRuleCall_0_0_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlInputTypeAccess().getDtypeGraphqlInputTypeDefinitionNAMETerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getDtypeGraphqlInputTypeDefinitionCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__NonNullAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
			'!'
			{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__NtypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getNtypeGraphqlNamedTypeParserRuleCall_1_0_0()); }
		ruleGraphqlNamedType
		{ after(grammarAccess.getGraphqlInputTypeAccess().getNtypeGraphqlNamedTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__NonNullAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
			'!'
			{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__LtypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getLtypeGraphqlListInputTypeParserRuleCall_2_0_0()); }
		ruleGraphqlListInputType
		{ after(grammarAccess.getGraphqlInputTypeAccess().getLtypeGraphqlListInputTypeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlInputType__NonNullAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
			'!'
			{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getGraphqlInputTypeAccess().getNonNullExclamationMarkKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getArgumentAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getTypeGraphqlTypeParserRuleCall_2_0()); }
		ruleGraphqlType
		{ after(grammarAccess.getArgumentAccess().getTypeGraphqlTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__DefValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getDefValueGraphqlValueParserRuleCall_3_1_0()); }
		ruleGraphqlValue
		{ after(grammarAccess.getArgumentAccess().getDefValueGraphqlValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlValue__SvAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlValueAccess().getSvSingleValueParserRuleCall_0_0()); }
		ruleSingleValue
		{ after(grammarAccess.getGraphqlValueAccess().getSvSingleValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlValue__EvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlValueAccess().getEvEnumValueCrossReference_1_0()); }
		(
			{ before(grammarAccess.getGraphqlValueAccess().getEvEnumValueNAMETerminalRuleCall_1_0_1()); }
			RULE_NAME
			{ after(grammarAccess.getGraphqlValueAccess().getEvEnumValueNAMETerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getGraphqlValueAccess().getEvEnumValueCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphqlValue__CvAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphqlValueAccess().getCvComplexValueParserRuleCall_2_0()); }
		ruleComplexValue
		{ after(grammarAccess.getGraphqlValueAccess().getCvComplexValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueIntValueParserRuleCall_0_0()); }
		ruleIntValue
		{ after(grammarAccess.getSingleValueAccess().getValueIntValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueFloatValueParserRuleCall_1_0()); }
		ruleFloatValue
		{ after(grammarAccess.getSingleValueAccess().getValueFloatValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueStringValueParserRuleCall_2_0()); }
		ruleStringValue
		{ after(grammarAccess.getSingleValueAccess().getValueStringValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueBOOLEANVALUETerminalRuleCall_3_0()); }
		RULE_BOOLEANVALUE
		{ after(grammarAccess.getSingleValueAccess().getValueBOOLEANVALUETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueNULLVALUETerminalRuleCall_4_0()); }
		RULE_NULLVALUE
		{ after(grammarAccess.getSingleValueAccess().getValueNULLVALUETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexValueAccess().getValueListValueParserRuleCall_0_0()); }
		ruleListValue
		{ after(grammarAccess.getComplexValueAccess().getValueListValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexValueAccess().getValueObjectValueParserRuleCall_1_0()); }
		ruleObjectValue
		{ after(grammarAccess.getComplexValueAccess().getValueObjectValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueAccess().getNameENUM_VALUETerminalRuleCall_1_0()); }
		RULE_ENUM_VALUE
		{ after(grammarAccess.getEnumValueAccess().getNameENUM_VALUETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__ValuesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListValueAccess().getValuesGraphqlValueParserRuleCall_2_0()); }
		ruleGraphqlValue
		{ after(grammarAccess.getListValueAccess().getValuesGraphqlValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__FieldsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectValueAccess().getFieldsObjectFieldParserRuleCall_2_0()); }
		ruleObjectField
		{ after(grammarAccess.getObjectValueAccess().getFieldsObjectFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getObjectFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFieldAccess().getValueGraphqlValueParserRuleCall_2_0()); }
		ruleGraphqlValue
		{ after(grammarAccess.getObjectFieldAccess().getValueGraphqlValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_COMMA : ',';

RULE_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BOOLEANVALUE : ('true'|'false');

RULE_NULLVALUE : 'null';

RULE_NONZERODIGIT : '1'..'9';

RULE_SCALAR : ('Int'|'Float'|'String'|'Boolean'|'ID');

RULE_ENUM_VALUE : ('A'..'Z'|'_') ('A'..'Z'|'_'|'0'..'9')*;

RULE_NAME : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
