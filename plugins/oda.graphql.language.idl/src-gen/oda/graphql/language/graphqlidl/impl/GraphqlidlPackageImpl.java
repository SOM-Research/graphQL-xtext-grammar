/**
 * generated by Xtext 2.10.0
 */
package oda.graphql.language.graphqlidl.impl;

import oda.graphql.language.graphqlidl.Argument;
import oda.graphql.language.graphqlidl.ComplexValue;
import oda.graphql.language.graphqlidl.EnumValue;
import oda.graphql.language.graphqlidl.GraphqlEmunTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlField;
import oda.graphql.language.graphqlidl.GraphqlInputField;
import oda.graphql.language.graphqlidl.GraphqlInputType;
import oda.graphql.language.graphqlidl.GraphqlInputTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlInterfaceTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlListInputType;
import oda.graphql.language.graphqlidl.GraphqlListType;
import oda.graphql.language.graphqlidl.GraphqlNamedType;
import oda.graphql.language.graphqlidl.GraphqlObjectTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlRootQuery;
import oda.graphql.language.graphqlidl.GraphqlScalarTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlSchema;
import oda.graphql.language.graphqlidl.GraphqlSchemaDefinition;
import oda.graphql.language.graphqlidl.GraphqlType;
import oda.graphql.language.graphqlidl.GraphqlTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlUnionTypeDefinition;
import oda.graphql.language.graphqlidl.GraphqlValue;
import oda.graphql.language.graphqlidl.GraphqlidlFactory;
import oda.graphql.language.graphqlidl.GraphqlidlPackage;
import oda.graphql.language.graphqlidl.ListValue;
import oda.graphql.language.graphqlidl.ObjectField;
import oda.graphql.language.graphqlidl.ObjectValue;
import oda.graphql.language.graphqlidl.SingleValue;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GraphqlidlPackageImpl extends EPackageImpl implements GraphqlidlPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlSchemaDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlRootQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlObjectTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlInterfaceTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlScalarTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlEmunTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlUnionTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlInputTypeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlInputFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlNamedTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlListTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlInputTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlListInputTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass graphqlValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass complexValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectFieldEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see oda.graphql.language.graphqlidl.GraphqlidlPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GraphqlidlPackageImpl()
  {
    super(eNS_URI, GraphqlidlFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link GraphqlidlPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GraphqlidlPackage init()
  {
    if (isInited) return (GraphqlidlPackage)EPackage.Registry.INSTANCE.getEPackage(GraphqlidlPackage.eNS_URI);

    // Obtain or create and register package
    GraphqlidlPackageImpl theGraphqlidlPackage = (GraphqlidlPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof GraphqlidlPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new GraphqlidlPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theGraphqlidlPackage.createPackageContents();

    // Initialize created meta-data
    theGraphqlidlPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGraphqlidlPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GraphqlidlPackage.eNS_URI, theGraphqlidlPackage);
    return theGraphqlidlPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlSchema()
  {
    return graphqlSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlSchema_Schema()
  {
    return (EReference)graphqlSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlSchema_Types()
  {
    return (EReference)graphqlSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlSchemaDefinition()
  {
    return graphqlSchemaDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlSchemaDefinition_Name()
  {
    return (EAttribute)graphqlSchemaDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlSchemaDefinition_RootQuery()
  {
    return (EReference)graphqlSchemaDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlSchemaDefinition_Mutation()
  {
    return (EReference)graphqlSchemaDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlSchemaDefinition_Subcription()
  {
    return (EReference)graphqlSchemaDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlRootQuery()
  {
    return graphqlRootQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlRootQuery_Name()
  {
    return (EAttribute)graphqlRootQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlRootQuery_Query()
  {
    return (EReference)graphqlRootQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlTypeDefinition()
  {
    return graphqlTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlTypeDefinition_Name()
  {
    return (EAttribute)graphqlTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlObjectTypeDefinition()
  {
    return graphqlObjectTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlObjectTypeDefinition_Interfaces()
  {
    return (EReference)graphqlObjectTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlObjectTypeDefinition_Fields()
  {
    return (EReference)graphqlObjectTypeDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlInterfaceTypeDefinition()
  {
    return graphqlInterfaceTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlInterfaceTypeDefinition_Fields()
  {
    return (EReference)graphqlInterfaceTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlScalarTypeDefinition()
  {
    return graphqlScalarTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlEmunTypeDefinition()
  {
    return graphqlEmunTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlEmunTypeDefinition_Values()
  {
    return (EReference)graphqlEmunTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlUnionTypeDefinition()
  {
    return graphqlUnionTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlUnionTypeDefinition_Members()
  {
    return (EReference)graphqlUnionTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlInputTypeDefinition()
  {
    return graphqlInputTypeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlInputTypeDefinition_Fields()
  {
    return (EReference)graphqlInputTypeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlInputField()
  {
    return graphqlInputFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlInputField_Name()
  {
    return (EAttribute)graphqlInputFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlInputField_Type()
  {
    return (EReference)graphqlInputFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlField()
  {
    return graphqlFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlField_Name()
  {
    return (EAttribute)graphqlFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlField_Args()
  {
    return (EReference)graphqlFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlField_Type()
  {
    return (EReference)graphqlFieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlType()
  {
    return graphqlTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlType_Dtype()
  {
    return (EReference)graphqlTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlType_NonNull()
  {
    return (EAttribute)graphqlTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlType_Ntype()
  {
    return (EReference)graphqlTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlType_Ltype()
  {
    return (EReference)graphqlTypeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlNamedType()
  {
    return graphqlNamedTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlNamedType_Name()
  {
    return (EAttribute)graphqlNamedTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlListType()
  {
    return graphqlListTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlInputType()
  {
    return graphqlInputTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlInputType_Dtype()
  {
    return (EReference)graphqlInputTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getGraphqlInputType_NonNull()
  {
    return (EAttribute)graphqlInputTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlInputType_Ntype()
  {
    return (EReference)graphqlInputTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlInputType_Ltype()
  {
    return (EReference)graphqlInputTypeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlListInputType()
  {
    return graphqlListInputTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getArgument()
  {
    return argumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getArgument_Name()
  {
    return (EAttribute)argumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArgument_Type()
  {
    return (EReference)argumentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getArgument_DefValue()
  {
    return (EReference)argumentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getGraphqlValue()
  {
    return graphqlValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlValue_Sv()
  {
    return (EReference)graphqlValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlValue_Ev()
  {
    return (EReference)graphqlValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getGraphqlValue_Cv()
  {
    return (EReference)graphqlValueEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSingleValue()
  {
    return singleValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSingleValue_Value()
  {
    return (EAttribute)singleValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getComplexValue()
  {
    return complexValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getComplexValue_Value()
  {
    return (EReference)complexValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEnumValue()
  {
    return enumValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEnumValue_Name()
  {
    return (EAttribute)enumValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getListValue()
  {
    return listValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getListValue_Values()
  {
    return (EReference)listValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectValue()
  {
    return objectValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getObjectValue_Fields()
  {
    return (EReference)objectValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectField()
  {
    return objectFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getObjectField_Name()
  {
    return (EAttribute)objectFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getObjectField_Value()
  {
    return (EReference)objectFieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GraphqlidlFactory getGraphqlidlFactory()
  {
    return (GraphqlidlFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    graphqlSchemaEClass = createEClass(GRAPHQL_SCHEMA);
    createEReference(graphqlSchemaEClass, GRAPHQL_SCHEMA__SCHEMA);
    createEReference(graphqlSchemaEClass, GRAPHQL_SCHEMA__TYPES);

    graphqlSchemaDefinitionEClass = createEClass(GRAPHQL_SCHEMA_DEFINITION);
    createEAttribute(graphqlSchemaDefinitionEClass, GRAPHQL_SCHEMA_DEFINITION__NAME);
    createEReference(graphqlSchemaDefinitionEClass, GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY);
    createEReference(graphqlSchemaDefinitionEClass, GRAPHQL_SCHEMA_DEFINITION__MUTATION);
    createEReference(graphqlSchemaDefinitionEClass, GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION);

    graphqlRootQueryEClass = createEClass(GRAPHQL_ROOT_QUERY);
    createEAttribute(graphqlRootQueryEClass, GRAPHQL_ROOT_QUERY__NAME);
    createEReference(graphqlRootQueryEClass, GRAPHQL_ROOT_QUERY__QUERY);

    graphqlTypeDefinitionEClass = createEClass(GRAPHQL_TYPE_DEFINITION);
    createEAttribute(graphqlTypeDefinitionEClass, GRAPHQL_TYPE_DEFINITION__NAME);

    graphqlObjectTypeDefinitionEClass = createEClass(GRAPHQL_OBJECT_TYPE_DEFINITION);
    createEReference(graphqlObjectTypeDefinitionEClass, GRAPHQL_OBJECT_TYPE_DEFINITION__INTERFACES);
    createEReference(graphqlObjectTypeDefinitionEClass, GRAPHQL_OBJECT_TYPE_DEFINITION__FIELDS);

    graphqlInterfaceTypeDefinitionEClass = createEClass(GRAPHQL_INTERFACE_TYPE_DEFINITION);
    createEReference(graphqlInterfaceTypeDefinitionEClass, GRAPHQL_INTERFACE_TYPE_DEFINITION__FIELDS);

    graphqlScalarTypeDefinitionEClass = createEClass(GRAPHQL_SCALAR_TYPE_DEFINITION);

    graphqlEmunTypeDefinitionEClass = createEClass(GRAPHQL_EMUN_TYPE_DEFINITION);
    createEReference(graphqlEmunTypeDefinitionEClass, GRAPHQL_EMUN_TYPE_DEFINITION__VALUES);

    graphqlUnionTypeDefinitionEClass = createEClass(GRAPHQL_UNION_TYPE_DEFINITION);
    createEReference(graphqlUnionTypeDefinitionEClass, GRAPHQL_UNION_TYPE_DEFINITION__MEMBERS);

    graphqlInputTypeDefinitionEClass = createEClass(GRAPHQL_INPUT_TYPE_DEFINITION);
    createEReference(graphqlInputTypeDefinitionEClass, GRAPHQL_INPUT_TYPE_DEFINITION__FIELDS);

    graphqlInputFieldEClass = createEClass(GRAPHQL_INPUT_FIELD);
    createEAttribute(graphqlInputFieldEClass, GRAPHQL_INPUT_FIELD__NAME);
    createEReference(graphqlInputFieldEClass, GRAPHQL_INPUT_FIELD__TYPE);

    graphqlFieldEClass = createEClass(GRAPHQL_FIELD);
    createEAttribute(graphqlFieldEClass, GRAPHQL_FIELD__NAME);
    createEReference(graphqlFieldEClass, GRAPHQL_FIELD__ARGS);
    createEReference(graphqlFieldEClass, GRAPHQL_FIELD__TYPE);

    graphqlTypeEClass = createEClass(GRAPHQL_TYPE);
    createEReference(graphqlTypeEClass, GRAPHQL_TYPE__DTYPE);
    createEAttribute(graphqlTypeEClass, GRAPHQL_TYPE__NON_NULL);
    createEReference(graphqlTypeEClass, GRAPHQL_TYPE__NTYPE);
    createEReference(graphqlTypeEClass, GRAPHQL_TYPE__LTYPE);

    graphqlNamedTypeEClass = createEClass(GRAPHQL_NAMED_TYPE);
    createEAttribute(graphqlNamedTypeEClass, GRAPHQL_NAMED_TYPE__NAME);

    graphqlListTypeEClass = createEClass(GRAPHQL_LIST_TYPE);

    graphqlInputTypeEClass = createEClass(GRAPHQL_INPUT_TYPE);
    createEReference(graphqlInputTypeEClass, GRAPHQL_INPUT_TYPE__DTYPE);
    createEAttribute(graphqlInputTypeEClass, GRAPHQL_INPUT_TYPE__NON_NULL);
    createEReference(graphqlInputTypeEClass, GRAPHQL_INPUT_TYPE__NTYPE);
    createEReference(graphqlInputTypeEClass, GRAPHQL_INPUT_TYPE__LTYPE);

    graphqlListInputTypeEClass = createEClass(GRAPHQL_LIST_INPUT_TYPE);

    argumentEClass = createEClass(ARGUMENT);
    createEAttribute(argumentEClass, ARGUMENT__NAME);
    createEReference(argumentEClass, ARGUMENT__TYPE);
    createEReference(argumentEClass, ARGUMENT__DEF_VALUE);

    graphqlValueEClass = createEClass(GRAPHQL_VALUE);
    createEReference(graphqlValueEClass, GRAPHQL_VALUE__SV);
    createEReference(graphqlValueEClass, GRAPHQL_VALUE__EV);
    createEReference(graphqlValueEClass, GRAPHQL_VALUE__CV);

    singleValueEClass = createEClass(SINGLE_VALUE);
    createEAttribute(singleValueEClass, SINGLE_VALUE__VALUE);

    complexValueEClass = createEClass(COMPLEX_VALUE);
    createEReference(complexValueEClass, COMPLEX_VALUE__VALUE);

    enumValueEClass = createEClass(ENUM_VALUE);
    createEAttribute(enumValueEClass, ENUM_VALUE__NAME);

    listValueEClass = createEClass(LIST_VALUE);
    createEReference(listValueEClass, LIST_VALUE__VALUES);

    objectValueEClass = createEClass(OBJECT_VALUE);
    createEReference(objectValueEClass, OBJECT_VALUE__FIELDS);

    objectFieldEClass = createEClass(OBJECT_FIELD);
    createEAttribute(objectFieldEClass, OBJECT_FIELD__NAME);
    createEReference(objectFieldEClass, OBJECT_FIELD__VALUE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    graphqlObjectTypeDefinitionEClass.getESuperTypes().add(this.getGraphqlTypeDefinition());
    graphqlInterfaceTypeDefinitionEClass.getESuperTypes().add(this.getGraphqlTypeDefinition());
    graphqlScalarTypeDefinitionEClass.getESuperTypes().add(this.getGraphqlTypeDefinition());
    graphqlEmunTypeDefinitionEClass.getESuperTypes().add(this.getGraphqlTypeDefinition());
    graphqlUnionTypeDefinitionEClass.getESuperTypes().add(this.getGraphqlTypeDefinition());
    graphqlInputTypeDefinitionEClass.getESuperTypes().add(this.getGraphqlTypeDefinition());
    graphqlTypeEClass.getESuperTypes().add(this.getGraphqlListType());
    graphqlInputTypeEClass.getESuperTypes().add(this.getGraphqlListInputType());

    // Initialize classes and features; add operations and parameters
    initEClass(graphqlSchemaEClass, GraphqlSchema.class, "GraphqlSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlSchema_Schema(), this.getGraphqlSchemaDefinition(), null, "schema", null, 0, 1, GraphqlSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlSchema_Types(), this.getGraphqlTypeDefinition(), null, "types", null, 0, -1, GraphqlSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlSchemaDefinitionEClass, GraphqlSchemaDefinition.class, "GraphqlSchemaDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGraphqlSchemaDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, GraphqlSchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlSchemaDefinition_RootQuery(), this.getGraphqlRootQuery(), null, "rootQuery", null, 0, 1, GraphqlSchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlSchemaDefinition_Mutation(), this.getGraphqlObjectTypeDefinition(), null, "mutation", null, 0, 1, GraphqlSchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlSchemaDefinition_Subcription(), this.getGraphqlObjectTypeDefinition(), null, "subcription", null, 0, 1, GraphqlSchemaDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlRootQueryEClass, GraphqlRootQuery.class, "GraphqlRootQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGraphqlRootQuery_Name(), ecorePackage.getEString(), "name", null, 0, 1, GraphqlRootQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlRootQuery_Query(), this.getGraphqlObjectTypeDefinition(), null, "query", null, 0, 1, GraphqlRootQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlTypeDefinitionEClass, GraphqlTypeDefinition.class, "GraphqlTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGraphqlTypeDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, GraphqlTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlObjectTypeDefinitionEClass, GraphqlObjectTypeDefinition.class, "GraphqlObjectTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlObjectTypeDefinition_Interfaces(), this.getGraphqlInterfaceTypeDefinition(), null, "interfaces", null, 0, -1, GraphqlObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlObjectTypeDefinition_Fields(), this.getGraphqlField(), null, "fields", null, 0, -1, GraphqlObjectTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlInterfaceTypeDefinitionEClass, GraphqlInterfaceTypeDefinition.class, "GraphqlInterfaceTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlInterfaceTypeDefinition_Fields(), this.getGraphqlField(), null, "fields", null, 0, -1, GraphqlInterfaceTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlScalarTypeDefinitionEClass, GraphqlScalarTypeDefinition.class, "GraphqlScalarTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(graphqlEmunTypeDefinitionEClass, GraphqlEmunTypeDefinition.class, "GraphqlEmunTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlEmunTypeDefinition_Values(), this.getEnumValue(), null, "values", null, 0, -1, GraphqlEmunTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlUnionTypeDefinitionEClass, GraphqlUnionTypeDefinition.class, "GraphqlUnionTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlUnionTypeDefinition_Members(), this.getGraphqlObjectTypeDefinition(), null, "members", null, 0, -1, GraphqlUnionTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlInputTypeDefinitionEClass, GraphqlInputTypeDefinition.class, "GraphqlInputTypeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlInputTypeDefinition_Fields(), this.getGraphqlInputField(), null, "fields", null, 0, -1, GraphqlInputTypeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlInputFieldEClass, GraphqlInputField.class, "GraphqlInputField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGraphqlInputField_Name(), ecorePackage.getEString(), "name", null, 0, 1, GraphqlInputField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlInputField_Type(), this.getGraphqlInputType(), null, "type", null, 0, 1, GraphqlInputField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlFieldEClass, GraphqlField.class, "GraphqlField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGraphqlField_Name(), ecorePackage.getEString(), "name", null, 0, 1, GraphqlField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlField_Args(), this.getArgument(), null, "args", null, 0, -1, GraphqlField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlField_Type(), this.getGraphqlType(), null, "type", null, 0, 1, GraphqlField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlTypeEClass, GraphqlType.class, "GraphqlType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlType_Dtype(), this.getGraphqlTypeDefinition(), null, "dtype", null, 0, 1, GraphqlType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGraphqlType_NonNull(), ecorePackage.getEBoolean(), "nonNull", null, 0, 1, GraphqlType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlType_Ntype(), this.getGraphqlNamedType(), null, "ntype", null, 0, 1, GraphqlType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlType_Ltype(), this.getGraphqlListType(), null, "ltype", null, 0, 1, GraphqlType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlNamedTypeEClass, GraphqlNamedType.class, "GraphqlNamedType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGraphqlNamedType_Name(), ecorePackage.getEString(), "name", null, 0, 1, GraphqlNamedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlListTypeEClass, GraphqlListType.class, "GraphqlListType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(graphqlInputTypeEClass, GraphqlInputType.class, "GraphqlInputType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlInputType_Dtype(), this.getGraphqlInputTypeDefinition(), null, "dtype", null, 0, 1, GraphqlInputType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGraphqlInputType_NonNull(), ecorePackage.getEBoolean(), "nonNull", null, 0, 1, GraphqlInputType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlInputType_Ntype(), this.getGraphqlNamedType(), null, "ntype", null, 0, 1, GraphqlInputType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlInputType_Ltype(), this.getGraphqlListInputType(), null, "ltype", null, 0, 1, GraphqlInputType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlListInputTypeEClass, GraphqlListInputType.class, "GraphqlListInputType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(argumentEClass, Argument.class, "Argument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArgument_Name(), ecorePackage.getEString(), "name", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArgument_Type(), this.getGraphqlType(), null, "type", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArgument_DefValue(), this.getGraphqlValue(), null, "defValue", null, 0, 1, Argument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(graphqlValueEClass, GraphqlValue.class, "GraphqlValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGraphqlValue_Sv(), this.getSingleValue(), null, "sv", null, 0, 1, GraphqlValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlValue_Ev(), this.getEnumValue(), null, "ev", null, 0, 1, GraphqlValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGraphqlValue_Cv(), this.getComplexValue(), null, "cv", null, 0, 1, GraphqlValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleValueEClass, SingleValue.class, "SingleValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSingleValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, SingleValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(complexValueEClass, ComplexValue.class, "ComplexValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComplexValue_Value(), ecorePackage.getEObject(), null, "value", null, 0, 1, ComplexValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumValueEClass, EnumValue.class, "EnumValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumValue_Name(), ecorePackage.getEString(), "name", null, 0, 1, EnumValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listValueEClass, ListValue.class, "ListValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getListValue_Values(), this.getGraphqlValue(), null, "values", null, 0, -1, ListValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectValueEClass, ObjectValue.class, "ObjectValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectValue_Fields(), this.getObjectField(), null, "fields", null, 0, -1, ObjectValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectFieldEClass, ObjectField.class, "ObjectField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getObjectField_Name(), ecorePackage.getEString(), "name", null, 0, 1, ObjectField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getObjectField_Value(), this.getGraphqlValue(), null, "value", null, 0, 1, ObjectField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //GraphqlidlPackageImpl
